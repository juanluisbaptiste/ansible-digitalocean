---
- name: Check if vars/private.yml exist
  stat: path={{ role_path }}/vars/private.yml
  register: private_vars

- name: Include private variables
  include_vars:
    file: vars/private.yml
  when: private_vars.stat.exists == true

- import_tasks: debian.yml
  when: ansible_os_family == 'Debian'

- import_tasks: centos.yml
  when: ansible_os_family == 'RedHat'

- name: Install pip packages
  pip:
    name: [six,dopy]

- name: "Create ssh key"
  digital_ocean_sshkey:
    oauth_token: "{{ do_api_token }}"
    name: "{{ do_ssh_key_name }}"
    ssh_pub_key: "{{ do_ssh_pub_key }}"
    state: present
  register: ssh_key
  when: do_ssh_key_name is defined and do_ssh_pub_key is defined

- debug: "msg={{ ssh_key }}"

- name: Create droplet
  digital_ocean_droplet:
    state: present
    name: "{{ droplet_name }}"
    oauth_token: "{{ do_api_token }}"
    size: "{{ droplet_size_id }}"
    region: "{{ droplet_region_id }}"
    image: "{{ droplet_image_id }}"
    ssh_keys: "{{ droplet_additional_ssh_key_ids | default([]) }} + [ '{{ ssh_key.data.ssh_key.id }}' ]"
    tags: "{{ droplet_tags | default('') }}"
    user_data: "{{ droplet_user_data | default('') }}"
    unique_name: "{{ droplet_unique_name }}"
    wait_timeout: "{{ droplet_wait_timeout }}"
  register: droplet
  tags: create_droplet

- debug: msg="Droplet IP is {{ droplet.data.droplet.networks.v4[1].ip_address }}"
  register: droplet_ip_address
  tags: create_droplet

- debug: msg="{{ ansible_user_id }}"
- name: Run the Template
  template: src=inventory.j2 dest={{ ansible_inventory_file }} owner={{ ansible_user_id }} group={{ ansible_user_id }} mode=0644

